import { URL } from 'url';
import { networkInterfaces } from 'os';
import { SANDBOX_URLS } from '../../src';

/**
 *
 * Important
 *
 * Do not edit this file, put your configuration in <project_root>/integration-settings.js.
 *
 * Use <project_root>/integration-settings.sample.js as a template and follow the instructions.
 */

const externalIPv4Networks = Object.values(networkInterfaces()).flat()
  .filter(net => net.family === 'IPv4' && !net.internal);
const externalIPAddress: string | undefined = externalIPv4Networks[0]?.address;

const port = 3344;
const endpoint: string = externalIPAddress != null && externalIPAddress
  ? `http://${externalIPAddress}:${port}` : `http://my-server.com:${port}`;

const settings = {
  notificationServer: {
    port
  },
  instanceSettings: {
    secretKey: 'sq7HjrUOBfKmC576ILgskD5srU870gJ7',
    urls: SANDBOX_URLS
  },
  merchantData: {
    merchantCode: '999008881',
    terminal: '1'
  },
  redirectData: {
    merchantURL: new URL('/notification', endpoint).toString(),
    successURL: new URL('/success', endpoint).toString(),
    errorURL: new URL('/error', endpoint).toString()
  },
  cardData: {
    pan: '4548812049400004',
    expiryMonth: '12',
    expiryYear: '20',
    cvv: '123',
    cip: '123456'
  }
};

try {
  // eslint-disable-next-line @typescript-eslint/no-var-requires
  const overrideSettings = require('../../integration-settings') as Partial<typeof settings>;

  // Override settings
  Object.assign(settings, overrideSettings);

  // eslint-disable-next-line no-empty
} catch (err) {
}

export default settings;
